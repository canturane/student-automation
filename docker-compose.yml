services:
  db:
    image: postgres:16
    container_name: pg_student
    environment:
      POSTGRES_USER: student
      POSTGRES_PASSWORD: studentpass
      POSTGRES_DB: studentdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U student -d studentdb"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  api:
    build:
      context: ./backend
    container_name: student_api
    environment:
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__Default: "Host=db;Port=5432;Database=studentdb;Username=student;Password=studentpass"
      Jwt__Key: "pTq0l3c6y9V2m5Z8r1U4x7A0b3D6g9J2N5Q8t1W4z7C0F3H6K9M2P5S8V1Y4B7E0"
      Jwt__Issuer: "StudentApi"
      Jwt__Audience: "StudentApiClients"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

volumes:
  pgdata:
